{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ian/football-stats-app/src/components/ui/table/table.js"],"sourcesContent":["import * as React from \"react\";\r\n\r\nconst Table = ({ children, className = '' }) => {\r\n  return (\r\n    <div className=\"w-full overflow-auto\">\r\n      <table className={`w-full caption-bottom text-sm border border-gray-300 ${className}`}>\r\n        {children}\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TableHeader = ({ children, className = '' }) => (\r\n  <thead className={`bg-gray-200 text-gray-700 sticky top-0 ${className}`}>\r\n    {children}\r\n  </thead>\r\n);\r\n\r\nconst TableBody = ({ children, className = '' }) => (\r\n  <tbody className={`divide-y divide-gray-300 odd:bg-gray-100 even:bg-white ${className}`}>\r\n    {children}\r\n  </tbody>\r\n);\r\n\r\nconst TableRow = ({ children, className = '' }) => (\r\n  <tr className={`border-b transition-colors hover:bg-gray-50 ${className}`}>\r\n    {children}\r\n  </tr>\r\n);\r\n\r\nconst TableHead = ({ children, className = '', onClick }) => (\r\n  <th\r\n    onClick={onClick}\r\n    className={`h-12 px-4 text-left align-middle font-medium text-gray-600 bg-gray-200 ${onClick ? 'cursor-pointer hover:bg-gray-300' : ''} ${className}`}\r\n  >\r\n    {children}\r\n  </th>\r\n);\r\n\r\nconst TableCell = ({ children, className = '' }) => (\r\n  <td className={`p-4 align-middle text-gray-700 ${className}`}>\r\n    {children}\r\n  </td>\r\n);\r\n\r\nexport { Table, TableHeader, TableBody, TableRow, TableHead, TableCell };\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;;;AAEA,MAAM,QAAQ,CAAC,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE;IACzC,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAM,WAAW,CAAC,qDAAqD,EAAE,WAAW;sBAClF;;;;;;;;;;;AAIT;AAEA,MAAM,cAAc,CAAC,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,iBAC/C,8OAAC;QAAM,WAAW,CAAC,uCAAuC,EAAE,WAAW;kBACpE;;;;;;AAIL,MAAM,YAAY,CAAC,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,iBAC7C,8OAAC;QAAM,WAAW,CAAC,uDAAuD,EAAE,WAAW;kBACpF;;;;;;AAIL,MAAM,WAAW,CAAC,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,iBAC5C,8OAAC;QAAG,WAAW,CAAC,4CAA4C,EAAE,WAAW;kBACtE;;;;;;AAIL,MAAM,YAAY,CAAC,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,OAAO,EAAE,iBACtD,8OAAC;QACC,SAAS;QACT,WAAW,CAAC,uEAAuE,EAAE,UAAU,qCAAqC,GAAG,CAAC,EAAE,WAAW;kBAEpJ;;;;;;AAIL,MAAM,YAAY,CAAC,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,iBAC7C,8OAAC;QAAG,WAAW,CAAC,+BAA+B,EAAE,WAAW;kBACzD"}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ian/football-stats-app/src/components/ui/tabs/index.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst Tabs = ({ defaultValue, children, className = '' }) => {\r\n  const [activeTab, setActiveTab] = React.useState(defaultValue)\r\n  \r\n  return (\r\n    <div className={className}>\r\n      {React.Children.map(children, child => {\r\n        if (!React.isValidElement(child)) return null\r\n        return React.cloneElement(child, { activeTab, setActiveTab })\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst TabsList = ({ children, className = '' }) => (\r\n  <div className={`inline-flex h-10 items-center justify-center rounded-md bg-gray-100 p-1 ${className}`}>\r\n    {children}\r\n  </div>\r\n)\r\n\r\nconst TabsTrigger = ({ value, children, activeTab, setActiveTab, className = '' }) => (\r\n  <button\r\n    className={`inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium transition-all\r\n      ${activeTab === value \r\n        ? 'bg-white text-black shadow-sm' \r\n        : 'text-gray-600 hover:text-black'\r\n      } ${className}`}\r\n    onClick={() => setActiveTab(value)}\r\n  >\r\n    {children}\r\n  </button>\r\n)\r\n\r\nconst TabsContent = ({ value, children, activeTab, className = '' }) => {\r\n  if (activeTab !== value) return null\r\n  return (\r\n    <div className={`mt-2 ${className}`}>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { Tabs, TabsList, TabsTrigger, TabsContent }"],"names":[],"mappings":";;;;;;;AAAA;;;AAEA,MAAM,OAAO,CAAC,EAAE,YAAY,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE;IACtD,MAAM,CAAC,WAAW,aAAa,GAAG,qMAAA,CAAA,UAAK,CAAC,QAAQ,CAAC;IAEjD,qBACE,8OAAC;QAAI,WAAW;kBACb,qMAAA,CAAA,UAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAA;YAC5B,IAAI,eAAC,qMAAA,CAAA,UAAK,CAAC,cAAc,CAAC,QAAQ,OAAO;YACzC,qBAAO,qMAAA,CAAA,UAAK,CAAC,YAAY,CAAC,OAAO;gBAAE;gBAAW;YAAa;QAC7D;;;;;;AAGN;AAEA,MAAM,WAAW,CAAC,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,iBAC5C,8OAAC;QAAI,WAAW,CAAC,wEAAwE,EAAE,WAAW;kBACnG;;;;;;AAIL,MAAM,cAAc,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,YAAY,EAAE,YAAY,EAAE,EAAE,iBAC/E,8OAAC;QACC,WAAW,CAAC;MACV,EAAE,cAAc,QACZ,kCACA,iCACH,CAAC,EAAE,WAAW;QACjB,SAAS,IAAM,aAAa;kBAE3B;;;;;;AAIL,MAAM,cAAc,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,YAAY,EAAE,EAAE;IACjE,IAAI,cAAc,OAAO,OAAO;IAChC,qBACE,8OAAC;QAAI,WAAW,CAAC,KAAK,EAAE,WAAW;kBAChC;;;;;;AAGP"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ian/football-stats-app/src/components/CurrentHalfSeason.js"],"sourcesContent":["'use client';\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"./ui/table/table\";\r\nimport { \r\n  Tabs, \r\n  TabsContent, \r\n  TabsList, \r\n  TabsTrigger \r\n} from \"./ui/tabs\";\r\n\r\nconst CurrentHalfSeason = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [stats, setStats] = useState({\r\n    seasonStats: [],\r\n    goalStats: [],\r\n    formData: []\r\n  });\r\n\r\n  const getCurrentHalf = () => {\r\n    // Temporarily subtract one year for testing - REMOVE THIS LINE LATER\r\n    const now = new Date(new Date().setFullYear(new Date().getFullYear()));\r\n    const year = now.getFullYear();\r\n    const isFirstHalf = now.getMonth() < 6; // Before July (0-based months)\r\n    \r\n    return {\r\n      year,\r\n      half: isFirstHalf ? 1 : 2,\r\n      startDate: isFirstHalf ? `${year}-01-01` : `${year}-07-01`,\r\n      endDate: isFirstHalf ? `${year}-06-30` : `${year}-12-31`,\r\n      description: `${isFirstHalf ? 'First' : 'Second'} Half ${year}`\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const currentPeriod = getCurrentHalf();\r\n        console.log('Current period:', currentPeriod);\r\n\r\n        const response = await fetch('/api/stats', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            startDate: currentPeriod.startDate,\r\n            endDate: currentPeriod.endDate\r\n          })\r\n        });\r\n        \r\n        console.log('API Response:', response.status);\r\n        const result = await response.json();\r\n        console.log('API Data:', result);\r\n        \r\n        if (result.data) {\r\n          setStats(result.data);\r\n        } else {\r\n          console.error('No data received from API');\r\n        }\r\n        \r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching stats:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const renderMainStats = () => (\r\n    <div>\r\n      <h3 className=\"text-xl font-semibold mb-4\">Points Leaderboard</h3>\r\n      <Table>\r\n        <TableHeader>\r\n          <TableRow>\r\n            <TableHead>Player</TableHead>\r\n            <TableHead className=\"text-center\">P</TableHead>\r\n            <TableHead className=\"text-center\">W</TableHead>\r\n            <TableHead className=\"text-center\">D</TableHead>\r\n            <TableHead className=\"text-center\">L</TableHead>\r\n            <TableHead className=\"text-center\">Goals</TableHead>\r\n            <TableHead className=\"text-center\">Heavy W</TableHead>\r\n            <TableHead className=\"text-center\">Heavy L</TableHead>\r\n            <TableHead className=\"text-center\">Clean Sheet</TableHead>\r\n            <TableHead className=\"text-center\">Win %</TableHead>\r\n            <TableHead className=\"text-center\">Points</TableHead>\r\n            <TableHead>Last 5</TableHead>\r\n          </TableRow>\r\n        </TableHeader>\r\n        <TableBody>\r\n          {stats.seasonStats.map((player, index) => {\r\nconst form = stats.formData.find(f => f.name === player.name)\r\n              ?.last_5_games?.split(', ') || [];\r\n            const losses = player.games_played - player.wins - player.draws;\r\n            \r\n            return (\r\n              <TableRow key={index}>\r\n                <TableCell className=\"font-medium\">{player.name}</TableCell>\r\n                <TableCell className=\"text-center\">{player.games_played}</TableCell>\r\n                <TableCell className={`text-center bg-green-${player.wins >= 10 ? '600' : \r\n                  player.wins >= 7 ? '500' : \r\n                  player.wins >= 4 ? '400' : \r\n                  player.wins >= 1 ? '300' : '200'}`}>\r\n                  {player.wins}\r\n                </TableCell>\r\n                <TableCell className=\"text-center\">{player.draws}</TableCell>\r\n                <TableCell className={`text-center bg-red-${losses >= 10 ? '600' : \r\n                  losses >= 7 ? '500' : \r\n                  losses >= 4 ? '400' : \r\n                  losses >= 1 ? '300' : '200'}`}>\r\n                  {losses}\r\n                </TableCell>\r\n                <TableCell className=\"text-center\">{player.goals}</TableCell>\r\n                <TableCell className={`text-center bg-green-${player.heavy_wins >= 5 ? '600' : \r\n                  player.heavy_wins >= 3 ? '500' : \r\n                  player.heavy_wins >= 1 ? '400' : '200'}`}>\r\n                  {player.heavy_wins}\r\n                </TableCell>\r\n                <TableCell className={`text-center bg-red-${player.heavy_losses >= 5 ? '600' : \r\n                  player.heavy_losses >= 3 ? '500' : \r\n                  player.heavy_losses >= 1 ? '400' : '200'}`}>\r\n                  {player.heavy_losses}\r\n                </TableCell>\r\n                <TableCell className={`text-center bg-green-${player.clean_sheets >= 5 ? '600' : \r\n                  player.clean_sheets >= 3 ? '500' : \r\n                  player.clean_sheets >= 1 ? '400' : '200'}`}>\r\n                  {player.clean_sheets}\r\n                </TableCell>\r\n                <TableCell className=\"text-center\">{player.win_percentage}%</TableCell>\r\n                <TableCell className=\"text-center font-bold\">{player.fantasy_points}</TableCell>\r\n                <TableCell>\r\n                  <div className=\"flex gap-1\">\r\n                    {form.map((result, i) => (\r\n                      <span\r\n                        key={i}\r\n                        className={`inline-block w-6 h-6 text-center rounded ${\r\n                          result.includes('W') ? 'bg-green-500' :\r\n                          result === 'D' ? 'bg-yellow-500' :\r\n                          'bg-red-500'\r\n                        } text-white`}\r\n                      >\r\n                        {result.replace('H', '')}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  );\r\n\r\n  const renderGoalStats = () => (\r\n    <div>\r\n      <h3 className=\"text-xl font-semibold mb-4\">Goalscoring Leaderboard</h3>\r\n      <Table>\r\n        <TableHeader>\r\n          <TableRow>\r\n            <TableHead>Player</TableHead>\r\n            <TableHead className=\"text-center\">Goals</TableHead>\r\n            <TableHead className=\"text-center\">MPG</TableHead>\r\n            <TableHead className=\"text-center w-48\">Last 5</TableHead>\r\n          </TableRow>\r\n        </TableHeader>\r\n        <TableBody>\r\n          {stats.goalStats.map((player, index) => (\r\n            <TableRow key={index}>\r\n              <TableCell className=\"font-medium\">{player.name}</TableCell>\r\n              <TableCell className=\"text-center\">{player.total_goals}</TableCell>\r\n              <TableCell \r\n                className={`text-center ${\r\n                  player.minutes_per_goal <= 60 ? 'bg-green-600' :\r\n                  player.minutes_per_goal <= 90 ? 'bg-green-500' :\r\n                  player.minutes_per_goal <= 120 ? 'bg-green-300' :\r\n                  ''\r\n                }`}\r\n              >\r\n                {player.minutes_per_goal}\r\n              </TableCell>\r\n              <TableCell>\r\n                <div className=\"flex gap-1\">\r\n                  {player.last_five_games?.split(',').map((goals, i) => {\r\n                    const goalCount = parseInt(goals);\r\n                    const maxGoals = Math.max(...stats.goalStats.map(p => p.max_goals_in_game));\r\n                    \r\n                    return (\r\n                      <span\r\n                        key={i}\r\n                        className={`inline-block w-6 h-6 text-center rounded ${\r\n                          goalCount === 0 ? 'bg-gray-200' :\r\n                          goalCount === maxGoals ? 'bg-yellow-500' :\r\n                          goalCount === maxGoals - 1 ? 'bg-yellow-400' :\r\n                          goalCount === maxGoals - 2 ? 'bg-yellow-300' :\r\n                          'bg-yellow-200'\r\n                        } text-black`}\r\n                      >\r\n                        {goals || ''}\r\n                      </span>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  );\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h2 className=\"text-2xl font-bold mb-6\">\r\n        Current Half-Season Performance - {getCurrentHalf().description}\r\n      </h2>\r\n      \r\n      {/* Desktop view - side by side */}\r\n      <div className=\"hidden md:flex gap-8\">\r\n        <div className=\"flex-1\">\r\n          {renderMainStats()}\r\n        </div>\r\n        <div className=\"flex-1\">\r\n          {renderGoalStats()}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Mobile view - tabs */}\r\n      <div className=\"md:hidden\">\r\n        <Tabs defaultValue=\"performance\">\r\n          <TabsList className=\"grid w-full grid-cols-2\">\r\n            <TabsTrigger value=\"performance\">Points</TabsTrigger>\r\n            <TabsTrigger value=\"goals\">Goals</TabsTrigger>\r\n          </TabsList>\r\n          <TabsContent value=\"performance\">\r\n            {renderMainStats()}\r\n          </TabsContent>\r\n          <TabsContent value=\"goals\">\r\n            {renderGoalStats()}\r\n          </TabsContent>\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentHalfSeason;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 725, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 731, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ian/football-stats-app/src/components/OverallSeasonPerformance.js"],"sourcesContent":["'use client';\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"./ui/table/table\";\r\nimport { \r\n  Tabs, \r\n  TabsContent, \r\n  TabsList, \r\n  TabsTrigger \r\n} from \"./ui/tabs\";\r\n\r\nconst OverallSeasonPerformance = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [stats, setStats] = useState({\r\n    seasonStats: [],\r\n    goalStats: [],\r\n    formData: []\r\n  });\r\n  const [selectedYear, setSelectedYear] = useState(2025);\r\n  const yearOptions = [2025, 2024, 2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015, 2014, 2013, 2012, 2011];\r\n\r\n  const getGreenColor = (value, max) => {\r\n    const percentage = value / max;\r\n    if (percentage > 0.8) return 'bg-green-600';\r\n    if (percentage > 0.6) return 'bg-green-500';\r\n    if (percentage > 0.4) return 'bg-green-400';\r\n    if (percentage > 0.2) return 'bg-green-300';\r\n    return 'bg-green-200';\r\n  };\r\n\r\n  const getRedColor = (value, max) => {\r\n    const percentage = value / max;\r\n    if (percentage > 0.8) return 'bg-red-600';\r\n    if (percentage > 0.6) return 'bg-red-500';\r\n    if (percentage > 0.4) return 'bg-red-400';\r\n    if (percentage > 0.2) return 'bg-red-300';\r\n    return 'bg-red-200';\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('/api/stats', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            startDate: `${selectedYear}-01-01`,\r\n            endDate: `${selectedYear}-12-31`\r\n          })\r\n        });\r\n        \r\n        const result = await response.json();\r\n        \r\n        if (result.data) {\r\n          setStats(result.data);\r\n        } else {\r\n          console.error('No data received from API');\r\n        }\r\n        \r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching stats:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [selectedYear]);\r\n\r\n  const renderMainStats = () => {\r\n    const maxWins = Math.max(...stats.seasonStats.map(p => p.wins), 1);\r\n    const maxHeavyWins = Math.max(...stats.seasonStats.map(p => p.heavy_wins), 1);\r\n    const maxCleanSheets = Math.max(...stats.seasonStats.map(p => p.clean_sheets), 1);\r\n    const maxLosses = Math.max(...stats.seasonStats.map(p => \r\n      p.games_played - p.wins - p.draws), 1);\r\n    const maxHeavyLosses = Math.max(...stats.seasonStats.map(p => p.heavy_losses), 1);\r\n\r\n    return (\r\n      <div>\r\n        <h3 className=\"text-xl font-semibold mb-4\">Points Leaderboard</h3>\r\n        <Table>\r\n          <TableHeader>\r\n            <TableRow>\r\n              <TableHead>Player</TableHead>\r\n              <TableHead className=\"text-center\">P</TableHead>\r\n              <TableHead className=\"text-center\">W</TableHead>\r\n              <TableHead className=\"text-center\">D</TableHead>\r\n              <TableHead className=\"text-center\">L</TableHead>\r\n              <TableHead className=\"text-center\">Goals</TableHead>\r\n              <TableHead className=\"text-center\">Heavy W</TableHead>\r\n              <TableHead className=\"text-center\">Heavy L</TableHead>\r\n              <TableHead className=\"text-center\">Clean Sheet</TableHead>\r\n              <TableHead className=\"text-center\">Win %</TableHead>\r\n              <TableHead className=\"text-center\">Points</TableHead>\r\n            </TableRow>\r\n          </TableHeader>\r\n          <TableBody>\r\n            {stats.seasonStats.map((player, index) => {\r\n              const losses = player.games_played - player.wins - player.draws;\r\n              \r\n              return (\r\n                <TableRow key={index} className=\"hover:bg-gray-50\">\r\n                  <TableCell className=\"font-medium\">{player.name}</TableCell>\r\n                  <TableCell className=\"text-center\">{player.games_played}</TableCell>\r\n                  <TableCell className={`text-center ${getGreenColor(player.wins, maxWins)}`}>\r\n                    {player.wins}\r\n                  </TableCell>\r\n                  <TableCell className=\"text-center\">{player.draws}</TableCell>\r\n                  <TableCell className={`text-center ${getRedColor(losses, maxLosses)}`}>\r\n                    {losses}\r\n                  </TableCell>\r\n                  <TableCell className=\"text-center\">{player.goals}</TableCell>\r\n                  <TableCell className={`text-center ${getGreenColor(player.heavy_wins, maxHeavyWins)}`}>\r\n                    {player.heavy_wins}\r\n                  </TableCell>\r\n                  <TableCell className={`text-center ${getRedColor(player.heavy_losses, maxHeavyLosses)}`}>\r\n                    {player.heavy_losses}\r\n                  </TableCell>\r\n                  <TableCell className={`text-center ${getGreenColor(player.clean_sheets, maxCleanSheets)}`}>\r\n                    {player.clean_sheets}\r\n                  </TableCell>\r\n                  <TableCell className=\"text-center\">{player.win_percentage}%</TableCell>\r\n                  <TableCell className=\"text-center font-bold\">{player.fantasy_points}</TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderGoalStats = () => (\r\n    <div>\r\n      <h3 className=\"text-xl font-semibold mb-4\">Goalscoring Leaderboard</h3>\r\n      <Table>\r\n        <TableHeader>\r\n          <TableRow>\r\n            <TableHead>Player</TableHead>\r\n            <TableHead className=\"text-center\">Goals</TableHead>\r\n            <TableHead className=\"text-center\">MPG</TableHead>\r\n          </TableRow>\r\n        </TableHeader>\r\n        <TableBody>\r\n          {stats.goalStats.map((player, index) => (\r\n            <TableRow key={index} className=\"hover:bg-gray-50\">\r\n              <TableCell className=\"font-medium\">{player.name}</TableCell>\r\n              <TableCell className=\"text-center\">{player.total_goals}</TableCell>\r\n              <TableCell \r\n                className={`text-center ${\r\n                  player.minutes_per_goal <= 60 ? 'bg-green-600' :\r\n                  player.minutes_per_goal <= 90 ? 'bg-green-500' :\r\n                  player.minutes_per_goal <= 120 ? 'bg-green-300' :\r\n                  ''\r\n                }`}\r\n              >\r\n                {player.minutes_per_goal}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  );\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n<div className=\"p-4\">\r\n  <div className=\"flex flex-wrap items-center gap-4 mb-6\">\r\n    <h2 className=\"text-2xl font-bold\">Overall Season Performance</h2>\r\n    <select \r\n      value={selectedYear}\r\n      onChange={(e) => setSelectedYear(Number(e.target.value))}\r\n      className=\"border rounded-md px-3 py-2 bg-white shadow hover:bg-gray-50\"\r\n    >\r\n      {yearOptions.map(year => (\r\n        <option key={year} value={year}>{year}</option>\r\n      ))}\r\n    </select>\r\n  </div>\r\n\r\n      \r\n      {/* Desktop view - side by side */}\r\n      <div className=\"hidden md:flex gap-8\">\r\n        <div className=\"flex-1\">\r\n          {renderMainStats()}\r\n        </div>\r\n        <div className=\"flex-1\">\r\n          {renderGoalStats()}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Mobile view - tabs */}\r\n      <div className=\"md:hidden\">\r\n        <Tabs defaultValue=\"performance\">\r\n          <TabsList className=\"grid w-full grid-cols-2\">\r\n            <TabsTrigger value=\"performance\">Points</TabsTrigger>\r\n            <TabsTrigger value=\"goals\">Goals</TabsTrigger>\r\n          </TabsList>\r\n          <TabsContent value=\"performance\">\r\n            {renderMainStats()}\r\n          </TabsContent>\r\n          <TabsContent value=\"goals\">\r\n            {renderGoalStats()}\r\n          </TabsContent>\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OverallSeasonPerformance;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1290, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1296, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ian/football-stats-app/src/components/AllTimeStats.js"],"sourcesContent":["'use client';\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"./ui/table/table\";\r\n\r\nconst AllTimeStats = () => {\r\n  const [stats, setStats] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [sortConfig, setSortConfig] = useState({\r\n    key: 'fantasy_points', // Default sort by Fantasy Points\r\n    direction: 'desc'\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('/api/allTimeStats');\r\n        const result = await response.json();\r\n        \r\n        if (result.data) {\r\n          setStats(result.data);\r\n        }\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching stats:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n  \r\n    fetchData();\r\n  }, []);\r\n\r\n  const getGamesPlayedColor = (games) => {\r\n    if (games >= 400) return 'bg-green-600';\r\n    if (games >= 300) return 'bg-green-500';\r\n    if (games >= 200) return 'bg-green-400';\r\n    if (games >= 100) return 'bg-yellow-200';\r\n    return '';\r\n  };\r\n\r\n  const getGoalsColor = (goals) => {\r\n    if (goals >= 300) return 'bg-green-600';\r\n    if (goals >= 200) return 'bg-green-500';\r\n    if (goals >= 100) return 'bg-green-400';\r\n    if (goals >= 50) return 'bg-yellow-200';\r\n    return '';\r\n  };\r\n\r\n  const getMPGColor = (mpg) => {\r\n    if (mpg <= 60) return 'bg-green-600';\r\n    if (mpg <= 90) return 'bg-green-500';\r\n    if (mpg <= 120) return 'bg-green-400';\r\n    return '';\r\n  };\r\n\r\n  const sortData = (key) => {\r\n    let direction = 'desc';\r\n    if (sortConfig.key === key && sortConfig.direction === 'desc') {\r\n      direction = 'asc';\r\n    }\r\n    setSortConfig({ key, direction });\r\n\r\n    const sortedData = [...stats].sort((a, b) => {\r\n      // Handle null or undefined values\r\n      if (a[key] === null || a[key] === undefined) return 1;\r\n      if (b[key] === null || b[key] === undefined) return -1;\r\n      \r\n      // Handle percentage values\r\n      if (key.includes('percentage')) {\r\n        const valueA = parseFloat(a[key]);\r\n        const valueB = parseFloat(b[key]);\r\n        if (direction === 'asc') {\r\n          return valueA > valueB ? 1 : valueA < valueB ? -1 : 0;\r\n        }\r\n        return valueA < valueB ? 1 : valueA > valueB ? -1 : 0;\r\n      }\r\n      \r\n      // Handle numeric and string values differently\r\n      const valueA = typeof a[key] === 'string' ? a[key].toLowerCase() : a[key];\r\n      const valueB = typeof b[key] === 'string' ? b[key].toLowerCase() : b[key];\r\n      \r\n      if (direction === 'asc') {\r\n        return valueA > valueB ? 1 : valueA < valueB ? -1 : 0;\r\n      }\r\n      return valueA < valueB ? 1 : valueA > valueB ? -1 : 0;\r\n    });\r\n    \r\n    setStats(sortedData);\r\n  };\r\n\r\n  const getSortIndicator = (key) => {\r\n    if (sortConfig.key === key) {\r\n      return (\r\n        <span className=\"ml-2 inline-block text-xs font-bold\">\r\n          {sortConfig.direction === 'desc' ? '▼' : '▲'}\r\n        </span>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h2 className=\"text-2xl font-bold mb-6\">All-Time Stats</h2>\r\n      <div className=\"max-h-[calc(100vh-200px)] border rounded-lg\">\r\n        <div className=\"relative overflow-auto\">\r\n          <Table>\r\n            <TableHeader>\r\n              <TableRow>\r\n                <TableHead \r\n                  onClick={() => sortData('name')} \r\n                  className=\"sticky top-0 bg-white z-10 cursor-pointer hover:bg-gray-50\"\r\n                >\r\n                  <div className=\"flex items-center\">\r\n                    Player {getSortIndicator('name')}\r\n                  </div>\r\n                </TableHead>\r\n                <TableHead \r\n                  onClick={() => sortData('games_played')} \r\n                  className=\"sticky top-0 bg-white z-10 cursor-pointer hover:bg-gray-50 text-center\"\r\n                >\r\n                  <div className=\"flex items-center justify-center\">\r\n                    P {getSortIndicator('games_played')}\r\n                  </div>\r\n                </TableHead>\r\n                <TableHead \r\n                  onClick={() => sortData('wins')} \r\n                  className=\"sticky top-0 bg-white z-10 cursor-pointer hover:bg-gray-50 text-center\"\r\n                >\r\n                  <div className=\"flex items-center justify-center\">\r\n                    W {getSortIndicator('wins')}\r\n                  </div>\r\n                </TableHead>\r\n                <TableHead \r\n                  onClick={() => sortData('draws')} \r\n                  className=\"sticky top-0 bg-white z-10 cursor-pointer hover:bg-gray-50 text-center\"\r\n                >\r\n                  <div className=\"flex items-center justify-center\">\r\n                    D {getSortIndicator('draws')}\r\n                  </div>\r\n                </TableHead>\r\n                <TableHead \r\n                  onClick={() => sortData('losses')} \r\n                  className=\"sticky top-0 bg-white z-10 cursor-pointer hover:bg-gray-50 text-center\"\r\n                >\r\n                  <div className=\"flex items-center justify-center\">\r\n                    L {getSortIndicator('losses')}\r\n                  </div>\r\n                </TableHead>\r\n                <TableHead \r\n                  onClick={() => sortData('goals')} \r\n                  className=\"sticky top-0 bg-white z-10 cursor-pointer hover:bg-gray-50 text-center\"\r\n                >\r\n                  <div className=\"flex items-center justify-center\">\r\n                    Goals {getSortIndicator('goals')}\r\n                  </div>\r\n                </TableHead>\r\n                <TableHead \r\n                  onClick={() => sortData('win_percentage')} \r\n                  className=\"sticky top-0 bg-white z-10 cursor-pointer hover:bg-gray-50 text-center\"\r\n                >\r\n                  <div className=\"flex items-center justify-center\">\r\n                    Win % {getSortIndicator('win_percentage')}\r\n                  </div>\r\n                </TableHead>\r\n                <TableHead \r\n                  onClick={() => sortData('minutes_per_goal')} \r\n                  className=\"sticky top-0 bg-white z-10 cursor-pointer hover:bg-gray-50 text-center\"\r\n                >\r\n                  <div className=\"flex items-center justify-center\">\r\n                    MPG {getSortIndicator('minutes_per_goal')}\r\n                  </div>\r\n                </TableHead>\r\n                <TableHead \r\n                  onClick={() => sortData('heavy_wins')} \r\n                  className=\"sticky top-0 bg-white z-10 cursor-pointer hover:bg-gray-50 text-center\"\r\n                >\r\n                  <div className=\"flex items-center justify-center\">\r\n                    Heavy W {getSortIndicator('heavy_wins')}\r\n                  </div>\r\n                </TableHead>\r\n                <TableHead \r\n                  onClick={() => sortData('heavy_win_percentage')} \r\n                  className=\"sticky top-0 bg-white z-10 cursor-pointer hover:bg-gray-50 text-center\"\r\n                >\r\n                  <div className=\"flex items-center justify-center\">\r\n                    Heavy W % {getSortIndicator('heavy_win_percentage')}\r\n                  </div>\r\n                </TableHead>\r\n                <TableHead \r\n                  onClick={() => sortData('heavy_losses')} \r\n                  className=\"sticky top-0 bg-white z-10 cursor-pointer hover:bg-gray-50 text-center\"\r\n                >\r\n                  <div className=\"flex items-center justify-center\">\r\n                    Heavy L {getSortIndicator('heavy_losses')}\r\n                  </div>\r\n                </TableHead>\r\n                <TableHead \r\n                  onClick={() => sortData('heavy_loss_percentage')} \r\n                  className=\"sticky top-0 bg-white z-10 cursor-pointer hover:bg-gray-50 text-center\"\r\n                >\r\n                  <div className=\"flex items-center justify-center\">\r\n                    Heavy L % {getSortIndicator('heavy_loss_percentage')}\r\n                  </div>\r\n                </TableHead>\r\n                <TableHead \r\n                  onClick={() => sortData('clean_sheets')} \r\n                  className=\"sticky top-0 bg-white z-10 cursor-pointer hover:bg-gray-50 text-center\"\r\n                >\r\n                  <div className=\"flex items-center justify-center\">\r\n                    Clean Sheets {getSortIndicator('clean_sheets')}\r\n                  </div>\r\n                </TableHead>\r\n                <TableHead \r\n                  onClick={() => sortData('clean_sheet_percentage')} \r\n                  className=\"sticky top-0 bg-white z-10 cursor-pointer hover:bg-gray-50 text-center\"\r\n                >\r\n                  <div className=\"flex items-center justify-center\">\r\n                    Clean Sheet % {getSortIndicator('clean_sheet_percentage')}\r\n                  </div>\r\n                </TableHead>\r\n                <TableHead \r\n                  onClick={() => sortData('fantasy_points')} \r\n                  className=\"sticky top-0 bg-white z-10 cursor-pointer hover:bg-gray-50 text-center\"\r\n                >\r\n                  <div className=\"flex items-center justify-center\">\r\n                    Points {getSortIndicator('fantasy_points')}\r\n                  </div>\r\n                </TableHead>\r\n                <TableHead \r\n                  onClick={() => sortData('points_per_game')} \r\n                  className=\"sticky top-0 bg-white z-10 cursor-pointer hover:bg-gray-50 text-center\"\r\n                >\r\n                  <div className=\"flex items-center justify-center\">\r\n                    PPG {getSortIndicator('points_per_game')}\r\n                  </div>\r\n                </TableHead>\r\n              </TableRow>\r\n            </TableHeader>\r\n            <TableBody>\r\n              {stats.map((player, index) => {\r\n                const isRetired = player.is_retired; // Ensure this field is correctly mapped\r\n                const playerName = isRetired ? `${player.name} (r)` : player.name;\r\n\r\n                return (\r\n                  <TableRow key={index}>\r\n                    <TableCell className={`font-medium ${isRetired ? 'text-red-600' : ''}`}>\r\n                      {playerName}\r\n                    </TableCell>\r\n                    <TableCell className={`text-center ${getGamesPlayedColor(player.games_played)}`}>\r\n                      {player.games_played}\r\n                    </TableCell>\r\n                    <TableCell className=\"text-center\">{player.wins}</TableCell>\r\n                    <TableCell className=\"text-center\">{player.draws}</TableCell>\r\n                    <TableCell className=\"text-center\">{player.losses}</TableCell>\r\n                    <TableCell className={`text-center ${getGoalsColor(player.goals)}`}>\r\n                      {player.goals}\r\n                    </TableCell>\r\n                    <TableCell className=\"text-center\">{player.win_percentage}%</TableCell>\r\n                    <TableCell className={`text-center ${getMPGColor(player.minutes_per_goal)}`}>\r\n                      {player.minutes_per_goal}\r\n                    </TableCell>\r\n                    <TableCell className=\"text-center\">{player.heavy_wins}</TableCell>\r\n                    <TableCell className=\"text-center\">{player.heavy_win_percentage}%</TableCell>\r\n                    <TableCell className=\"text-center\">{player.heavy_losses}</TableCell>\r\n                    <TableCell className=\"text-center\">{player.heavy_loss_percentage}%</TableCell>\r\n                    <TableCell className=\"text-center\">{player.clean_sheets}</TableCell>\r\n                    <TableCell className=\"text-center\">{player.clean_sheet_percentage}%</TableCell>\r\n                    <TableCell className=\"text-center font-bold\">{player.fantasy_points}</TableCell>\r\n                    <TableCell className=\"text-center\">\r\n                      {player.points_per_game}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllTimeStats;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1920, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1926, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ian/football-stats-app/src/components/HonourRoll.js"],"sourcesContent":["'use client';\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"./ui/table/table\";\r\nimport { \r\n  Tabs, \r\n  TabsContent, \r\n  TabsList, \r\n  TabsTrigger \r\n} from \"./ui/tabs\";\r\n\r\nconst HonourRoll = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    seasonWinners: [],\r\n    topScorers: [],\r\n    records: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('/api/honourroll');\r\n        const result = await response.json();\r\n        \r\n        if (result.data) {\r\n          // Get the inner records object and flatten the structure\r\n          const recordsData = result.data.records[0]?.records;\r\n          \r\n          // Modify streaks to match the component's expected format\r\n          const modifiedData = {\r\n            ...result.data,\r\n            records: {\r\n              consecutive_goals: recordsData?.consecutive_goals,\r\n              most_goals_in_game: recordsData?.most_goals_in_game,\r\n              streaks: {\r\n                'Win Streak': recordsData?.streaks?.['Win Streak'],\r\n                'Loss Streak': recordsData?.streaks?.['Loss Streak'],\r\n                'No Win Streak': recordsData?.streaks?.['No Win Streak'],\r\n                'Undefeated Streak': recordsData?.streaks?.['Undefeated Streak']\r\n              }\r\n            }\r\n          };\r\n          setData(modifiedData);\r\n        }\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching honour roll:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n  \r\n    fetchData();\r\n  }, []);\r\n\r\n  const renderSeasonalHonours = () => (\r\n    <div>\r\n      <h3 className=\"text-xl font-semibold mb-4\">Season Winners</h3>\r\n      <Table>\r\n        <TableHeader>\r\n          <TableRow>\r\n            <TableHead>Year</TableHead>\r\n            <TableHead>Champion</TableHead>\r\n            <TableHead>Points</TableHead>\r\n            <TableHead>Runners Up</TableHead>\r\n            <TableHead>Top Scorer</TableHead>\r\n            <TableHead>Goals</TableHead>\r\n          </TableRow>\r\n        </TableHeader>\r\n        <TableBody>\r\n          {data.seasonWinners.map((season) => {\r\n            const scorerData = data.topScorers.find(s => s.year === season.year)?.scorers;\r\n            return (\r\n              <TableRow key={season.year} className=\"hover:bg-gray-50\">\r\n                <TableCell className=\"font-medium\">{season.year}</TableCell>\r\n                <TableCell className=\"font-bold\">{season.winners.winner}</TableCell>\r\n                <TableCell>{season.winners.winner_points}</TableCell>\r\n                <TableCell>\r\n                  {season.winners.runners_up?.map(runner => \r\n                    `${runner.name} (${runner.points})`).join(', ')}\r\n                </TableCell>\r\n                <TableCell className=\"font-bold\">{scorerData?.winner}</TableCell>\r\n                <TableCell>{scorerData?.winner_goals}</TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  );\r\n\r\n  const renderRecords = () => (\r\n    <div>\r\n      <h3 className=\"text-xl font-semibold mb-4\">TNF Records</h3>\r\n      <Table>\r\n        <TableHeader>\r\n          <TableRow>\r\n            <TableHead>Record</TableHead>\r\n            <TableHead>Player</TableHead>\r\n            <TableHead>Details</TableHead>\r\n            <TableHead>Date</TableHead>\r\n          </TableRow>\r\n        </TableHeader>\r\n        <TableBody>\r\n          {data.records && (\r\n            <>\r\n              <TableRow className=\"hover:bg-gray-50\">\r\n                <TableCell className=\"font-medium\">Most Goals in a Game</TableCell>\r\n                <TableCell className=\"font-bold\">\r\n                  {data.records.most_goals_in_game?.name || 'N/A'}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {data.records.most_goals_in_game?.goals || 0} goals\r\n                  <br />\r\n                  <span className=\"text-sm text-gray-600\">\r\n                    Final Score: {data.records.most_goals_in_game?.score || 'N/A'}\r\n                  </span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  {data.records.most_goals_in_game?.date ? \r\n                    new Date(data.records.most_goals_in_game.date).toLocaleDateString() : 'N/A'}\r\n                </TableCell>\r\n              </TableRow>\r\n\r\n              {data.records.streaks?.['Win Streak'] && (\r\n                <TableRow className=\"hover:bg-gray-50\">\r\n                  <TableCell className=\"font-medium\">Longest Win Streak</TableCell>\r\n                  <TableCell className=\"font-bold\">{data.records.streaks['Win Streak'].name}</TableCell>\r\n                  <TableCell>{data.records.streaks['Win Streak'].streak} games</TableCell>\r\n                  <TableCell>\r\n                    {new Date(data.records.streaks['Win Streak'].start_date).toLocaleDateString()} - {' '}\r\n                    {new Date(data.records.streaks['Win Streak'].end_date).toLocaleDateString()}\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n\r\n              {data.records.streaks?.['Undefeated Streak'] && (\r\n                <TableRow className=\"hover:bg-gray-50\">\r\n                  <TableCell className=\"font-medium\">Longest Undefeated Streak</TableCell>\r\n                  <TableCell className=\"font-bold\">{data.records.streaks['Undefeated Streak'].name}</TableCell>\r\n                  <TableCell>{data.records.streaks['Undefeated Streak'].streak} games</TableCell>\r\n                  <TableCell>\r\n                    {new Date(data.records.streaks['Undefeated Streak'].start_date).toLocaleDateString()} - {' '}\r\n                    {new Date(data.records.streaks['Undefeated Streak'].end_date).toLocaleDateString()}\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n\r\n              {data.records.streaks?.['Loss Streak'] && (\r\n                <TableRow className=\"hover:bg-gray-50\">\r\n                  <TableCell className=\"font-medium\">Longest Losing Streak</TableCell>\r\n                  <TableCell className=\"font-bold\">{data.records.streaks['Loss Streak'].name}</TableCell>\r\n                  <TableCell>{data.records.streaks['Loss Streak'].streak} games</TableCell>\r\n                  <TableCell>\r\n                    {new Date(data.records.streaks['Loss Streak'].start_date).toLocaleDateString()} - {' '}\r\n                    {new Date(data.records.streaks['Loss Streak'].end_date).toLocaleDateString()}\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n\r\n              {data.records.streaks?.['No Win Streak'] && (\r\n                <TableRow className=\"hover:bg-gray-50\">\r\n                  <TableCell className=\"font-medium\">Longest Streak Without a Win</TableCell>\r\n                  <TableCell className=\"font-bold\">{data.records.streaks['No Win Streak'].name}</TableCell>\r\n                  <TableCell>{data.records.streaks['No Win Streak'].streak} games</TableCell>\r\n                  <TableCell>\r\n                    {new Date(data.records.streaks['No Win Streak'].start_date).toLocaleDateString()} - {' '}\r\n                    {new Date(data.records.streaks['No Win Streak'].end_date).toLocaleDateString()}\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n\r\n              {data.records.consecutive_goals && (\r\n                <TableRow className=\"hover:bg-gray-50\">\r\n                  <TableCell className=\"font-medium\">Most Consecutive Games Scoring</TableCell>\r\n                  <TableCell className=\"font-bold\">{data.records.consecutive_goals.name}</TableCell>\r\n                  <TableCell>{data.records.consecutive_goals.streak} games</TableCell>\r\n                  <TableCell>\r\n                    {new Date(data.records.consecutive_goals.start_date).toLocaleDateString()} - {' '}\r\n                    {new Date(data.records.consecutive_goals.end_date).toLocaleDateString()}\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </>\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  );\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h2 className=\"text-2xl font-bold mb-6\">Hall of Fame</h2>\r\n      \r\n      {/* Desktop view */}\r\n      <div className=\"hidden md:flex flex-col gap-8\">\r\n        {renderSeasonalHonours()}\r\n        {renderRecords()}\r\n      </div>\r\n\r\n      {/* Mobile view */}\r\n      <div className=\"md:hidden\">\r\n        <Tabs defaultValue=\"seasonal\">\r\n          <TabsList className=\"grid w-full grid-cols-2\">\r\n            <TabsTrigger value=\"seasonal\">Season Honours</TabsTrigger>\r\n            <TabsTrigger value=\"records\">Records</TabsTrigger>\r\n          </TabsList>\r\n          <TabsContent value=\"seasonal\">\r\n            {renderSeasonalHonours()}\r\n          </TabsContent>\r\n          <TabsContent value=\"records\">\r\n            {renderRecords()}\r\n          </TabsContent>\r\n        </Tabs>\r\n      </div>\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HonourRoll;"],"names":[],"mappings":";;;;AACA;AACA;AAQA;AAVA;;;;;AAiBA,MAAM,aAAa;IACjB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAC/B,eAAe,EAAE;QACjB,YAAY,EAAE;QACd,SAAS;IACX;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY;YAChB,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM;gBAC7B,MAAM,SAAS,MAAM,SAAS,IAAI;gBAElC,IAAI,OAAO,IAAI,EAAE;oBACf,yDAAyD;oBACzD,MAAM,cAAc,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE;oBAE5C,0DAA0D;oBAC1D,MAAM,eAAe;wBACnB,GAAG,OAAO,IAAI;wBACd,SAAS;4BACP,mBAAmB,aAAa;4BAChC,oBAAoB,aAAa;4BACjC,SAAS;gCACP,cAAc,aAAa,SAAS,CAAC,aAAa;gCAClD,eAAe,aAAa,SAAS,CAAC,cAAc;gCACpD,iBAAiB,aAAa,SAAS,CAAC,gBAAgB;gCACxD,qBAAqB,aAAa,SAAS,CAAC,oBAAoB;4BAClE;wBACF;oBACF;oBACA,QAAQ;gBACV;gBACA,WAAW;YACb,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,+BAA+B;gBAC7C,WAAW;YACb;QACF;QAEA;IACF,GAAG,EAAE;IAEL,MAAM,wBAAwB,kBAC5B,8OAAC;;8BACC,8OAAC;oBAAG,WAAU;8BAA6B;;;;;;8BAC3C,8OAAC,yIAAA,CAAA,QAAK;;sCACJ,8OAAC,yIAAA,CAAA,cAAW;sCACV,cAAA,8OAAC,yIAAA,CAAA,WAAQ;;kDACP,8OAAC,yIAAA,CAAA,YAAS;kDAAC;;;;;;kDACX,8OAAC,yIAAA,CAAA,YAAS;kDAAC;;;;;;kDACX,8OAAC,yIAAA,CAAA,YAAS;kDAAC;;;;;;kDACX,8OAAC,yIAAA,CAAA,YAAS;kDAAC;;;;;;kDACX,8OAAC,yIAAA,CAAA,YAAS;kDAAC;;;;;;kDACX,8OAAC,yIAAA,CAAA,YAAS;kDAAC;;;;;;;;;;;;;;;;;sCAGf,8OAAC,yIAAA,CAAA,YAAS;sCACP,KAAK,aAAa,CAAC,GAAG,CAAC,CAAC;gCACvB,MAAM,aAAa,KAAK,UAAU,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,OAAO,IAAI,GAAG;gCACtE,qBACE,8OAAC,yIAAA,CAAA,WAAQ;oCAAmB,WAAU;;sDACpC,8OAAC,yIAAA,CAAA,YAAS;4CAAC,WAAU;sDAAe,OAAO,IAAI;;;;;;sDAC/C,8OAAC,yIAAA,CAAA,YAAS;4CAAC,WAAU;sDAAa,OAAO,OAAO,CAAC,MAAM;;;;;;sDACvD,8OAAC,yIAAA,CAAA,YAAS;sDAAE,OAAO,OAAO,CAAC,aAAa;;;;;;sDACxC,8OAAC,yIAAA,CAAA,YAAS;sDACP,OAAO,OAAO,CAAC,UAAU,EAAE,IAAI,CAAA,SAC9B,GAAG,OAAO,IAAI,CAAC,EAAE,EAAE,OAAO,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK;;;;;;sDAE9C,8OAAC,yIAAA,CAAA,YAAS;4CAAC,WAAU;sDAAa,YAAY;;;;;;sDAC9C,8OAAC,yIAAA,CAAA,YAAS;sDAAE,YAAY;;;;;;;mCATX,OAAO,IAAI;;;;;4BAY9B;;;;;;;;;;;;;;;;;;IAMR,MAAM,gBAAgB,kBACpB,8OAAC;;8BACC,8OAAC;oBAAG,WAAU;8BAA6B;;;;;;8BAC3C,8OAAC,yIAAA,CAAA,QAAK;;sCACJ,8OAAC,yIAAA,CAAA,cAAW;sCACV,cAAA,8OAAC,yIAAA,CAAA,WAAQ;;kDACP,8OAAC,yIAAA,CAAA,YAAS;kDAAC;;;;;;kDACX,8OAAC,yIAAA,CAAA,YAAS;kDAAC;;;;;;kDACX,8OAAC,yIAAA,CAAA,YAAS;kDAAC;;;;;;kDACX,8OAAC,yIAAA,CAAA,YAAS;kDAAC;;;;;;;;;;;;;;;;;sCAGf,8OAAC,yIAAA,CAAA,YAAS;sCACP,KAAK,OAAO,kBACX;;kDACE,8OAAC,yIAAA,CAAA,WAAQ;wCAAC,WAAU;;0DAClB,8OAAC,yIAAA,CAAA,YAAS;gDAAC,WAAU;0DAAc;;;;;;0DACnC,8OAAC,yIAAA,CAAA,YAAS;gDAAC,WAAU;0DAClB,KAAK,OAAO,CAAC,kBAAkB,EAAE,QAAQ;;;;;;0DAE5C,8OAAC,yIAAA,CAAA,YAAS;;oDACP,KAAK,OAAO,CAAC,kBAAkB,EAAE,SAAS;oDAAE;kEAC7C,8OAAC;;;;;kEACD,8OAAC;wDAAK,WAAU;;4DAAwB;4DACxB,KAAK,OAAO,CAAC,kBAAkB,EAAE,SAAS;;;;;;;;;;;;;0DAG5D,8OAAC,yIAAA,CAAA,YAAS;0DACP,KAAK,OAAO,CAAC,kBAAkB,EAAE,OAChC,IAAI,KAAK,KAAK,OAAO,CAAC,kBAAkB,CAAC,IAAI,EAAE,kBAAkB,KAAK;;;;;;;;;;;;oCAI3E,KAAK,OAAO,CAAC,OAAO,EAAE,CAAC,aAAa,kBACnC,8OAAC,yIAAA,CAAA,WAAQ;wCAAC,WAAU;;0DAClB,8OAAC,yIAAA,CAAA,YAAS;gDAAC,WAAU;0DAAc;;;;;;0DACnC,8OAAC,yIAAA,CAAA,YAAS;gDAAC,WAAU;0DAAa,KAAK,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI;;;;;;0DACzE,8OAAC,yIAAA,CAAA,YAAS;;oDAAE,KAAK,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM;oDAAC;;;;;;;0DACtD,8OAAC,yIAAA,CAAA,YAAS;;oDACP,IAAI,KAAK,KAAK,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,EAAE,kBAAkB;oDAAG;oDAAI;oDACjF,IAAI,KAAK,KAAK,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,EAAE,kBAAkB;;;;;;;;;;;;;oCAK9E,KAAK,OAAO,CAAC,OAAO,EAAE,CAAC,oBAAoB,kBAC1C,8OAAC,yIAAA,CAAA,WAAQ;wCAAC,WAAU;;0DAClB,8OAAC,yIAAA,CAAA,YAAS;gDAAC,WAAU;0DAAc;;;;;;0DACnC,8OAAC,yIAAA,CAAA,YAAS;gDAAC,WAAU;0DAAa,KAAK,OAAO,CAAC,OAAO,CAAC,oBAAoB,CAAC,IAAI;;;;;;0DAChF,8OAAC,yIAAA,CAAA,YAAS;;oDAAE,KAAK,OAAO,CAAC,OAAO,CAAC,oBAAoB,CAAC,MAAM;oDAAC;;;;;;;0DAC7D,8OAAC,yIAAA,CAAA,YAAS;;oDACP,IAAI,KAAK,KAAK,OAAO,CAAC,OAAO,CAAC,oBAAoB,CAAC,UAAU,EAAE,kBAAkB;oDAAG;oDAAI;oDACxF,IAAI,KAAK,KAAK,OAAO,CAAC,OAAO,CAAC,oBAAoB,CAAC,QAAQ,EAAE,kBAAkB;;;;;;;;;;;;;oCAKrF,KAAK,OAAO,CAAC,OAAO,EAAE,CAAC,cAAc,kBACpC,8OAAC,yIAAA,CAAA,WAAQ;wCAAC,WAAU;;0DAClB,8OAAC,yIAAA,CAAA,YAAS;gDAAC,WAAU;0DAAc;;;;;;0DACnC,8OAAC,yIAAA,CAAA,YAAS;gDAAC,WAAU;0DAAa,KAAK,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI;;;;;;0DAC1E,8OAAC,yIAAA,CAAA,YAAS;;oDAAE,KAAK,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,MAAM;oDAAC;;;;;;;0DACvD,8OAAC,yIAAA,CAAA,YAAS;;oDACP,IAAI,KAAK,KAAK,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,UAAU,EAAE,kBAAkB;oDAAG;oDAAI;oDAClF,IAAI,KAAK,KAAK,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,QAAQ,EAAE,kBAAkB;;;;;;;;;;;;;oCAK/E,KAAK,OAAO,CAAC,OAAO,EAAE,CAAC,gBAAgB,kBACtC,8OAAC,yIAAA,CAAA,WAAQ;wCAAC,WAAU;;0DAClB,8OAAC,yIAAA,CAAA,YAAS;gDAAC,WAAU;0DAAc;;;;;;0DACnC,8OAAC,yIAAA,CAAA,YAAS;gDAAC,WAAU;0DAAa,KAAK,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI;;;;;;0DAC5E,8OAAC,yIAAA,CAAA,YAAS;;oDAAE,KAAK,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,MAAM;oDAAC;;;;;;;0DACzD,8OAAC,yIAAA,CAAA,YAAS;;oDACP,IAAI,KAAK,KAAK,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,UAAU,EAAE,kBAAkB;oDAAG;oDAAI;oDACpF,IAAI,KAAK,KAAK,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,QAAQ,EAAE,kBAAkB;;;;;;;;;;;;;oCAKjF,KAAK,OAAO,CAAC,iBAAiB,kBAC7B,8OAAC,yIAAA,CAAA,WAAQ;wCAAC,WAAU;;0DAClB,8OAAC,yIAAA,CAAA,YAAS;gDAAC,WAAU;0DAAc;;;;;;0DACnC,8OAAC,yIAAA,CAAA,YAAS;gDAAC,WAAU;0DAAa,KAAK,OAAO,CAAC,iBAAiB,CAAC,IAAI;;;;;;0DACrE,8OAAC,yIAAA,CAAA,YAAS;;oDAAE,KAAK,OAAO,CAAC,iBAAiB,CAAC,MAAM;oDAAC;;;;;;;0DAClD,8OAAC,yIAAA,CAAA,YAAS;;oDACP,IAAI,KAAK,KAAK,OAAO,CAAC,iBAAiB,CAAC,UAAU,EAAE,kBAAkB;oDAAG;oDAAI;oDAC7E,IAAI,KAAK,KAAK,OAAO,CAAC,iBAAiB,CAAC,QAAQ,EAAE,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAWvF,IAAI,SAAS;QACX,qBAAO,8OAAC;sBAAI;;;;;;IACd;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA0B;;;;;;0BAGxC,8OAAC;gBAAI,WAAU;;oBACZ;oBACA;;;;;;;0BAIH,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,wIAAA,CAAA,OAAI;oBAAC,cAAa;;sCACjB,8OAAC,wIAAA,CAAA,WAAQ;4BAAC,WAAU;;8CAClB,8OAAC,wIAAA,CAAA,cAAW;oCAAC,OAAM;8CAAW;;;;;;8CAC9B,8OAAC,wIAAA,CAAA,cAAW;oCAAC,OAAM;8CAAU;;;;;;;;;;;;sCAE/B,8OAAC,wIAAA,CAAA,cAAW;4BAAC,OAAM;sCAChB;;;;;;sCAEH,8OAAC,wIAAA,CAAA,cAAW;4BAAC,OAAM;sCAChB;;;;;;;;;;;;;;;;;;;;;;;AAQb;uCAEe"}},
    {"offset": {"line": 2585, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2591, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ian/football-stats-app/src/components/PlayerProfile.js"],"sourcesContent":["'use client';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table/table\";\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\n// Placeholder Card components\r\nconst Card = ({ children }) => <div className=\"border rounded-lg shadow-sm p-4\">{children}</div>;\r\nconst CardHeader = ({ children }) => <div className=\"border-b pb-2 mb-4\">{children}</div>;\r\nconst CardTitle = ({ children }) => <h2 className=\"text-xl font-semibold\">{children}</h2>;\r\nconst CardContent = ({ children }) => <div className=\"mt-4\">{children}</div>;\r\n\r\nconst PlayerProfile = ({ id }) => {\r\n  const [profile, setProfile] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [selectedYear, setSelectedYear] = useState(null);\r\n  const [selectedStat, setSelectedStat] = useState('Games Played'); // Default stat to display\r\n  const [selectedPlayerId, setSelectedPlayerId] = useState(id); // Default to the passed player ID\r\n  const [players, setPlayers] = useState([]); // State to hold the list of players\r\n\r\n  // Fetch players, excluding ringers\r\n  useEffect(() => {\r\n    const fetchPlayers = async () => {\r\n      try {\r\n        const response = await fetch('/api/players');\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch players');\r\n        }\r\n        const data = await response.json();\r\n        // Filter out players marked as is_ringer\r\n        setPlayers(data.data.filter(player => !player.is_ringer));\r\n      } catch (error) {\r\n        console.error('Error fetching players:', error);\r\n      }\r\n    };\r\n\r\n    fetchPlayers();\r\n  }, []);\r\n\r\n  // Fetch player profile\r\n  useEffect(() => {\r\n    const fetchProfile = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch(`/api/playerprofile?id=${selectedPlayerId}`);\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch profile: ${response.statusText}`);\r\n        }\r\n        const data = await response.json();\r\n        if (data && data.profile) {\r\n          const profileData = {\r\n            ...data.profile,\r\n            yearly_stats: data.profile.yearly_stats || [], // Default to an empty array if yearly_stats is undefined\r\n          };\r\n          setProfile(profileData);\r\n          if (profileData.yearly_stats.length > 0) {\r\n            setSelectedYear(profileData.yearly_stats[0].year);\r\n          }\r\n        } else {\r\n          throw new Error('Invalid data structure: profile not found in response');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching profile:', err);\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (selectedPlayerId) {\r\n      fetchProfile();\r\n    }\r\n  }, [selectedPlayerId]);\r\n\r\n  // Helper function for streak colors\r\n  const getStreakColor = (streak) => {\r\n    if (streak >= 5) return 'text-green-600';\r\n    if (streak >= 3) return 'text-green-500';\r\n    if (streak >= 2) return 'text-yellow-500';\r\n    return 'text-gray-600';\r\n  };\r\n\r\n  // Stat options for the dropdown\r\n  const statOptions = [\r\n    'Games Played',\r\n    'Goals Scored',\r\n    'Minutes Per Goal',\r\n    'Points per Game',\r\n    'Fantasy Points'\r\n  ];\r\n\r\n  // Prepare chart data based on the selected stat\r\n  const yearlyPerformanceData = profile?.yearly_stats.map(year => {\r\n    const minutesPerGoal = (year.games_played * 60) / (year.goals_scored || 1);\r\n    const pointsPerGame = year.fantasy_points / (year.games_played || 1);\r\n\r\n    return {\r\n      year: year.year.toString(),\r\n      games_played: year.games_played || 0,\r\n      goals_scored: year.goals_scored || 0,\r\n      minutes_per_goal: minutesPerGoal || 0,\r\n      points_per_game: pointsPerGame || 0,\r\n      fantasy_points: year.fantasy_points || 0\r\n    };\r\n  }).reverse();\r\n\r\n  const selectedYearStats = profile?.yearly_stats.find(y => y.year === selectedYear) || {};\r\n\r\n  if (loading) {\r\n    return <div className=\"flex justify-center items-center h-64\">Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"text-red-500\">Error: {error}</div>;\r\n  }\r\n\r\n  if (!profile || !profile.yearly_stats) {\r\n    return <div>No profile data found</div>;\r\n  }\r\n\r\n  if (!Array.isArray(profile.yearly_stats) || profile.yearly_stats.length === 0) {\r\n    return <div>No yearly stats available</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6 p-6\">\r\n      {/* Player Selection Dropdown */}\r\n      <div className=\"flex items-center gap-4 mb-6\">\r\n        <label htmlFor=\"player-select\" className=\"block text-sm font-medium text-gray-700\">\r\n          Select Player\r\n        </label>\r\n        <select\r\n          id=\"player-select\"\r\n          value={selectedPlayerId}\r\n          onChange={(e) => setSelectedPlayerId(Number(e.target.value))}\r\n          className=\"block w-48 px-3 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md\"\r\n        >\r\n          {Array.isArray(players) && players.length > 0 ? (\r\n            players.map((player) => (\r\n              <option key={player.id} value={player.id}>\r\n                {player.name}\r\n              </option>\r\n            ))\r\n          ) : (\r\n            <option value=\"\">No players available</option>\r\n          )}\r\n        </select>\r\n      </div>\r\n\r\n      {/* Player Profile Card */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>{profile.name}'s Profile</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-6\">\r\n            <div className=\"p-4 border rounded-lg\">\r\n              <h3 className=\"font-semibold mb-2\">Games Played</h3>\r\n              <p className=\"text-2xl\">{profile.games_played}</p>\r\n            </div>\r\n            <div className=\"p-4 border rounded-lg\">\r\n              <h3 className=\"font-semibold mb-2\">Fantasy Points</h3>\r\n              <p className=\"text-2xl\">{profile.fantasy_points}</p>\r\n            </div>\r\n            <div className=\"p-4 border rounded-lg\">\r\n              <h3 className=\"font-semibold mb-2\">Most Goals in a Game</h3>\r\n              <p className=\"text-2xl\">{profile.most_goals}</p>\r\n              <p className=\"text-sm text-gray-600\">{profile.most_goals_date}</p>\r\n            </div>\r\n            <div className=\"p-4 border rounded-lg\">\r\n              <h3 className=\"font-semibold mb-2\">Longest Win Streak</h3>\r\n              <p className={`text-2xl ${getStreakColor(profile.win_streak)}`}>\r\n                {profile.win_streak} games\r\n              </p>\r\n              <p className=\"text-sm text-gray-600\">{profile.win_streak_dates}</p>\r\n            </div>\r\n            <div className=\"p-4 border rounded-lg\">\r\n              <h3 className=\"font-semibold mb-2\">Longest Undefeated Streak</h3>\r\n              <p className={`text-2xl ${getStreakColor(profile.undefeated_streak)}`}>\r\n                {profile.undefeated_streak} games\r\n              </p>\r\n              <p className=\"text-sm text-gray-600\">{profile.undefeated_streak_dates}</p>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Performance Over Time Card */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Performance Over Time</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"flex items-center gap-4 mb-4\">\r\n            <label htmlFor=\"stat-select\" className=\"block text-sm font-medium text-gray-700\">\r\n              Select Stat to Display\r\n            </label>\r\n            <select\r\n              id=\"stat-select\"\r\n              value={selectedStat}\r\n              onChange={(e) => setSelectedStat(e.target.value)}\r\n              className=\"block w-48 px-3 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md\"\r\n            >\r\n              {statOptions.map(option => (\r\n                <option key={option} value={option}>{option}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"h-96 w-full\">\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n              <BarChart\r\n                data={yearlyPerformanceData}\r\n                margin={{\r\n                  top: 20,\r\n                  right: 30,\r\n                  left: 20,\r\n                  bottom: 5,\r\n                }}\r\n              >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"year\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar dataKey={selectedStat.toLowerCase().replace(/ /g, '_')} fill=\"#8884d8\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Yearly Statistics Card */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Yearly Statistics</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <Table>\r\n            <TableHeader>\r\n              <TableRow>\r\n                <TableHead>Year</TableHead>\r\n                <TableHead className=\"text-right\">Games</TableHead>\r\n                <TableHead className=\"text-right\">Goals</TableHead>\r\n                <TableHead className=\"text-right\">Mins/Goal</TableHead>\r\n                <TableHead className=\"text-right\">Points/Game</TableHead>\r\n                <TableHead className=\"text-right\">Fantasy Points</TableHead>\r\n              </TableRow>\r\n            </TableHeader>\r\n            <TableBody>\r\n              {profile.yearly_stats.map((year) => {\r\n                const minutesPerGoal = (year.games_played * 60) / (year.goals_scored || 1);\r\n                const pointsPerGame = year.fantasy_points / (year.games_played || 1);\r\n\r\n                return (\r\n                  <TableRow\r\n                    key={year.year}\r\n                    className={selectedYear === year.year ? 'bg-gray-100' : ''}\r\n                    onClick={() => setSelectedYear(year.year)}\r\n                    style={{ cursor: 'pointer' }}\r\n                  >\r\n                    <TableCell>{year.year}</TableCell>\r\n                    <TableCell className=\"text-right\">{year.games_played}</TableCell>\r\n                    <TableCell className=\"text-right\">{year.goals_scored}</TableCell>\r\n                    <TableCell className=\"text-right\">{minutesPerGoal.toFixed(1)}</TableCell>\r\n                    <TableCell className=\"text-right\">{pointsPerGame.toFixed(1)}</TableCell>\r\n                    <TableCell className=\"text-right\">{year.fantasy_points}</TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayerProfile;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3319, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3333, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ian/football-stats-app/src/components/admin/AdminPanel.js"],"sourcesContent":["'use client';\r\nimport React, { useState } from 'react';\r\nimport dynamic from 'next/dynamic';\r\n\r\nconst PlayerManager = dynamic(() => import('@/components/admin/PlayerManager'), { ssr: false });\r\nconst MatchManager = dynamic(() => import('@/components/admin/MatchManager'), { ssr: false });\r\n\r\nconst AdminPanel = () => {\r\n  const [currentSection, setCurrentSection] = useState(null);\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      {!currentSection ? (\r\n        <div className=\"space-y-4\">\r\n          <h1 className=\"text-2xl font-bold mb-6\">Admin Panel</h1>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div\r\n              onClick={() => setCurrentSection('players')}\r\n              className=\"p-6 rounded-lg shadow cursor-pointer bg-gradient-to-r from-green-500 to-blue-500 text-white hover:from-blue-500 hover:to-green-500 transition-all\"\r\n            >\r\n              <h2 className=\"text-xl font-semibold\">Add or Amend Players</h2>\r\n            </div>\r\n            <div\r\n              onClick={() => setCurrentSection('matches')}\r\n              className=\"p-6 rounded-lg shadow cursor-pointer bg-gradient-to-r from-purple-500 to-pink-500 text-white hover:from-pink-500 hover:to-purple-500 transition-all\"\r\n            >\r\n              <h2 className=\"text-xl font-semibold\">Enter Match Information</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <button\r\n            onClick={() => setCurrentSection(null)}\r\n            className=\"mb-4 px-4 py-2 bg-gradient-to-r from-blue-500 to-purple-600 text-white rounded-lg hover:from-purple-600 hover:to-blue-500 transition-all\"\r\n          >\r\n            Back to Admin Menu\r\n          </button>\r\n          {/* No Suspense wrapper needed here */}\r\n          {currentSection === 'players' && <PlayerManager />}\r\n          {currentSection === 'matches' && <MatchManager />}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAIA,MAAM,gBAAgB,CAAA,GAAA,+JAAA,CAAA,UAAO,AAAD;;;;;;;;IAAsD,KAAK;;AACvF,MAAM,eAAe,CAAA,GAAA,+JAAA,CAAA,UAAO,AAAD;;;;;;;;IAAqD,KAAK;;AAErF,MAAM,aAAa;IACjB,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAErD,qBACE,8OAAC;QAAI,WAAU;kBACZ,CAAC,+BACA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAA0B;;;;;;8BACxC,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BACC,SAAS,IAAM,kBAAkB;4BACjC,WAAU;sCAEV,cAAA,8OAAC;gCAAG,WAAU;0CAAwB;;;;;;;;;;;sCAExC,8OAAC;4BACC,SAAS,IAAM,kBAAkB;4BACjC,WAAU;sCAEV,cAAA,8OAAC;gCAAG,WAAU;0CAAwB;;;;;;;;;;;;;;;;;;;;;;iCAK5C,8OAAC;;8BACC,8OAAC;oBACC,SAAS,IAAM,kBAAkB;oBACjC,WAAU;8BACX;;;;;;gBAIA,mBAAmB,2BAAa,8OAAC;;;;;gBACjC,mBAAmB,2BAAa,8OAAC;;;;;;;;;;;;;;;;AAK5C;uCAEe"}},
    {"offset": {"line": 3458, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3464, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ian/football-stats-app/src/components/admin/AdminLayout.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst AdminLayout = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const adminAuth = localStorage.getItem('adminAuth');\r\n    if (adminAuth === 'true') {\r\n      setIsAuthenticated(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    if (password === 'poo') {\r\n      localStorage.setItem('adminAuth', 'true');\r\n      setIsAuthenticated(true);\r\n      setError('');\r\n    } else {\r\n      setError('Invalid password');\r\n    }\r\n  };\r\n\r\n  if (!isAuthenticated) {\r\n    return (\r\n      <div className=\"flex min-h-screen flex-col items-center justify-center p-24\">\r\n        <div className=\"w-full max-w-md p-6 bg-white rounded-lg shadow-lg\">\r\n          <h2 className=\"text-2xl font-bold mb-6 text-center text-gray-800\">Admin Access</h2>\r\n          <form onSubmit={handleLogin} className=\"space-y-4\">\r\n            <div>\r\n              <input\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                placeholder=\"Enter password\"\r\n                className=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n            {error && <p className=\"text-red-500 text-sm\">{error}</p>}\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-full py-2 px-4 bg-gradient-to-r from-blue-500 to-purple-600 text-white rounded-lg hover:from-purple-600 hover:to-blue-500 transition-all\"\r\n            >\r\n              Login\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\nconsole.log('AdminLayoutComponent file is being loaded');\r\n\r\nexport default AdminLayout;"],"names":[],"mappings":";;;;AAAA;;;AAEA,MAAM,cAAc,CAAC,EAAE,QAAQ,EAAE;IAC/B,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY,aAAa,OAAO,CAAC;QACvC,IAAI,cAAc,QAAQ;YACxB,mBAAmB;QACrB;IACF,GAAG,EAAE;IAEL,MAAM,cAAc,CAAC;QACnB,EAAE,cAAc;QAChB,IAAI,aAAa,OAAO;YACtB,aAAa,OAAO,CAAC,aAAa;YAClC,mBAAmB;YACnB,SAAS;QACX,OAAO;YACL,SAAS;QACX;IACF;IAEA,IAAI,CAAC,iBAAiB;QACpB,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAoD;;;;;;kCAClE,8OAAC;wBAAK,UAAU;wBAAa,WAAU;;0CACrC,8OAAC;0CACC,cAAA,8OAAC;oCACC,MAAK;oCACL,OAAO;oCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;oCAC3C,aAAY;oCACZ,WAAU;;;;;;;;;;;4BAGb,uBAAS,8OAAC;gCAAE,WAAU;0CAAwB;;;;;;0CAC/C,8OAAC;gCACC,MAAK;gCACL,WAAU;0CACX;;;;;;;;;;;;;;;;;;;;;;;IAOX;IAEA,qBAAO;kBAAG;;AACZ;AAEA,QAAQ,GAAG,CAAC;uCAEG"}},
    {"offset": {"line": 3567, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3573, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ian/football-stats-app/src/app/page.js"],"sourcesContent":["'use client';\nimport React, { useState } from 'react';\nimport CurrentHalfSeason from '@/components/CurrentHalfSeason';\nimport OverallSeasonPerformance from '@/components/OverallSeasonPerformance';\nimport AllTimeStats from '@/components/AllTimeStats';\nimport HonourRoll from '@/components/HonourRoll';\nimport PlayerProfile from '@/components/PlayerProfile';\nimport AdminPanel from '@/components/admin/AdminPanel';\nimport AdminLayout from '@/components/admin/AdminLayout';\n\nconsole.log('Type of AdminLayout:', typeof AdminLayout);\nconsole.log('AdminPanel:', AdminPanel);\nconsole.log('AdminLayout:', AdminLayout);\n\nexport default function Home() {\n  const [currentView, setCurrentView] = useState('current-half');\n  const [selectedPlayerId, setSelectedPlayerId] = useState(null);\n\n  const goHome = () => {\n    setCurrentView('');\n    setSelectedPlayerId(null); // Reset selected player ID when going back home\n  };\n\n  const handlePlayerProfileClick = (playerId) => {\n    console.log('Setting selected player ID:', playerId); // Debugging\n    setSelectedPlayerId(playerId);\n    setCurrentView('player-profiles');\n  };\n\n  console.log('Current view:', currentView); // Debugging\n  console.log('Selected player ID:', selectedPlayerId); // Debugging\n\n  return (\n    <main>\n      {!currentView ? (\n        <div className=\"flex min-h-screen flex-col items-center p-24\">\n          <h1 className=\"text-4xl font-bold mb-6\">Berko TNF Stats</h1>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            <div \n              className=\"p-6 rounded-lg shadow cursor-pointer bg-gradient-to-r from-pink-500 via-red-500 to-yellow-500 text-white hover:from-yellow-500 hover:to-pink-500 transition-all\"\n              onClick={() => setCurrentView('current-half')}\n            >\n              <h2 className=\"text-xl font-semibold\">Current Half-Season</h2>\n            </div>\n            <div \n              className=\"p-6 rounded-lg shadow cursor-pointer bg-gradient-to-r from-blue-500 to-purple-600 text-white hover:from-purple-600 hover:to-blue-500 transition-all\"\n              onClick={() => setCurrentView('season')}\n            >\n              <h2 className=\"text-xl font-semibold\">Performance by Season</h2>\n            </div>\n            <div \n              className=\"p-6 rounded-lg shadow cursor-pointer bg-gradient-to-r from-blue-500 to-purple-600 text-white hover:from-purple-600 hover:to-blue-500 transition-all\"\n              onClick={() => setCurrentView('all-time')}\n            >\n              <h2 className=\"text-xl font-semibold\">All-Time Leaderboard</h2>\n            </div>\n            <div \n              className=\"p-6 rounded-lg shadow cursor-pointer bg-gradient-to-r from-blue-500 to-purple-600 text-white hover:from-purple-600 hover:to-blue-500 transition-all\"\n              onClick={() => setCurrentView('honour-roll')}\n            >\n              <h2 className=\"text-xl font-semibold\">Hall of Fame</h2>\n            </div>\n            <div \n              className=\"p-6 rounded-lg shadow cursor-pointer bg-gradient-to-r from-blue-500 to-purple-600 text-white hover:from-purple-600 hover:to-blue-500 transition-all\"\n              onClick={() => handlePlayerProfileClick(1)} // Pass the player ID here\n            >\n              <h2 className=\"text-xl font-semibold\">Individual Player Profiles</h2>\n            </div>\n            <div \n              className=\"p-6 rounded-lg shadow cursor-pointer bg-gradient-to-r from-green-500 to-blue-500 text-white hover:from-blue-500 hover:to-green-500 transition-all\"\n              onClick={() => setCurrentView('admin')}\n            >\n              <h2 className=\"text-xl font-semibold\">Admin Section</h2>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <>\n          <button\n            onClick={goHome}\n            className=\"px-6 py-3 bg-gradient-to-r from-blue-500 to-purple-600 text-white rounded-lg shadow-md hover:from-purple-600 hover:to-blue-500 transition-all\"\n          >\n            Back to Home\n          </button>\n          {currentView === 'current-half' && <CurrentHalfSeason />}\n          {currentView === 'season' && <OverallSeasonPerformance />}\n          {currentView === 'all-time' && <AllTimeStats />}\n          {currentView === 'honour-roll' && <HonourRoll />}\n          {currentView === 'player-profiles' && <PlayerProfile id={selectedPlayerId} />}\n          {currentView === 'admin' && (\n            <AdminLayout>\n              <AdminPanel />\n            </AdminLayout>\n          )}\n        </>\n      )}\n    </main>\n  );\n}"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;;;;;;;;;AAUA,QAAQ,GAAG,CAAC,wBAAwB,OAAO,yIAAA,CAAA,UAAW;AACtD,QAAQ,GAAG,CAAC,eAAe,wIAAA,CAAA,UAAU;AACrC,QAAQ,GAAG,CAAC,gBAAgB,yIAAA,CAAA,UAAW;AAExB,SAAS;IACtB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzD,MAAM,SAAS;QACb,eAAe;QACf,oBAAoB,OAAO,gDAAgD;IAC7E;IAEA,MAAM,2BAA2B,CAAC;QAChC,QAAQ,GAAG,CAAC,+BAA+B,WAAW,YAAY;QAClE,oBAAoB;QACpB,eAAe;IACjB;IAEA,QAAQ,GAAG,CAAC,iBAAiB,cAAc,YAAY;IACvD,QAAQ,GAAG,CAAC,uBAAuB,mBAAmB,YAAY;IAElE,qBACE,8OAAC;kBACE,CAAC,4BACA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAA0B;;;;;;8BACxC,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BACC,WAAU;4BACV,SAAS,IAAM,eAAe;sCAE9B,cAAA,8OAAC;gCAAG,WAAU;0CAAwB;;;;;;;;;;;sCAExC,8OAAC;4BACC,WAAU;4BACV,SAAS,IAAM,eAAe;sCAE9B,cAAA,8OAAC;gCAAG,WAAU;0CAAwB;;;;;;;;;;;sCAExC,8OAAC;4BACC,WAAU;4BACV,SAAS,IAAM,eAAe;sCAE9B,cAAA,8OAAC;gCAAG,WAAU;0CAAwB;;;;;;;;;;;sCAExC,8OAAC;4BACC,WAAU;4BACV,SAAS,IAAM,eAAe;sCAE9B,cAAA,8OAAC;gCAAG,WAAU;0CAAwB;;;;;;;;;;;sCAExC,8OAAC;4BACC,WAAU;4BACV,SAAS,IAAM,yBAAyB;sCAExC,cAAA,8OAAC;gCAAG,WAAU;0CAAwB;;;;;;;;;;;sCAExC,8OAAC;4BACC,WAAU;4BACV,SAAS,IAAM,eAAe;sCAE9B,cAAA,8OAAC;gCAAG,WAAU;0CAAwB;;;;;;;;;;;;;;;;;;;;;;iCAK5C;;8BACE,8OAAC;oBACC,SAAS;oBACT,WAAU;8BACX;;;;;;gBAGA,gBAAgB,gCAAkB,8OAAC,sIAAA,CAAA,UAAiB;;;;;gBACpD,gBAAgB,0BAAY,8OAAC,6IAAA,CAAA,UAAwB;;;;;gBACrD,gBAAgB,4BAAc,8OAAC,iIAAA,CAAA,UAAY;;;;;gBAC3C,gBAAgB,+BAAiB,8OAAC,+HAAA,CAAA,UAAU;;;;;gBAC5C,gBAAgB,mCAAqB,8OAAC,kIAAA,CAAA,UAAa;oBAAC,IAAI;;;;;;gBACxD,gBAAgB,yBACf,8OAAC,yIAAA,CAAA,UAAW;8BACV,cAAA,8OAAC,wIAAA,CAAA,UAAU;;;;;;;;;;;;;;;;;AAOzB"}},
    {"offset": {"line": 3791, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}