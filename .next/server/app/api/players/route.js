"use strict";(()=>{var e={};e.id=838,e.ids=[838],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4344:(e,r,a)=>{a.r(r),a.d(r,{originalPathname:()=>h,patchFetch:()=>g,requestAsyncStorage:()=>c,routeModule:()=>d,serverHooks:()=>m,staticGenerationAsyncStorage:()=>y});var t={};a.r(t),a.d(t,{GET:()=>u});var s=a(9303),i=a(8716),o=a(670),p=a(7070),n=a(728);let l=e=>JSON.parse(JSON.stringify(e,(e,r)=>"bigint"==typeof r?Number(r):r));async function u(e){try{let e=await n._.$queryRaw`
      SELECT DISTINCT 
        players.player_id as id,
        players.name
      FROM players
      ORDER BY name ASC
    `,r=p.NextResponse.json({data:l(e)});return r.headers.set("Cache-Control","public, s-maxage=30, stale-while-revalidate=59"),r}catch(e){return console.error("Database Error:",e),p.NextResponse.json({error:"Failed to fetch players"},{status:500})}}let d=new s.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/players/route",pathname:"/api/players",filename:"route",bundlePath:"app/api/players/route"},resolvedPagePath:"C:\\Users\\Ian\\BerkoTNF\\src\\app\\api\\players\\route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:c,staticGenerationAsyncStorage:y,serverHooks:m}=d,h="/api/players/route";function g(){return(0,o.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:y})}},728:(e,r,a)=>{a.d(r,{_:()=>s});let t=require("@prisma/client"),s=global.prisma||new t.PrismaClient({log:["query"]})}};var r=require("../../../webpack-runtime.js");r.C(e);var a=e=>r(r.s=e),t=r.X(0,[948,972],()=>a(4344));module.exports=t})();